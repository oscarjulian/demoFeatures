{"version":3,"sources":["../../../src/@ionic-native/plugins/fingerprint-aio/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,iBAAA,EAAmB,MAAA,EAAO,MAAO,oBAAA,CAAqB;AA6BxE;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AASH;IAAoC,kCAAiB;IAArD;;IAyBA,CAAC;IAxBC;;;OAGG;IAEH,oCAAW,GAAX;QACE,MAAM,CAAC;IACT,CAAC;IAED;;;;OAIG;IAEH,6BAAI,GAAJ,UAAK,OAA2B;QAC9B,MAAM,CAAC;IACT,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAlBA;QADC,OAAO,EAAE;;;;qDAGT;IAQD;QADC,OAAO,EAAE;;;;8CAGT;IAlBU,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,gCAAgC;YACxC,SAAS,EAAE,aAAa;YACxB,IAAI,EAAE,8DAA8D;YACpE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,cAAc,CAyB1B;IAAD,qBAAC;CAzBD,AAyBC,CAzBmC,iBAAiB,GAyBpD;SAzBY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface FingerprintOptions {\n  /**\n   * Key for platform keychain\n   */\n  clientId: string;\n\n  /**\n   * Secret password. Only for android\n   */\n  clientSecret?: string;\n\n  /**\n   * Disable 'use backup' option. Only for android (optional)\n   */\n  disableBackup?: boolean;\n\n  /**\n   * Title of fallback button. Only for iOS\n   */\n  localizedFallbackTitle?: string;\n\n  /**\n   * Description in authentication dialogue. Only for iOS\n   */\n  localizedReason?: string;\n}\n\n/**\n * @name Fingerprint AIO\n * @description\n * Use simple fingerprint authentication on Android and iOS.\n * Requires Cordova plugin: cordova-plugin-fingerprint-aio. For more info about plugin, vist: https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio\n *\n * @usage\n * ```typescript\n * import { FingerprintAIO } from '@ionic-native/fingerprint-aio';\n *\n * constructor(private faio: FingerprintAIO) { }\n *\n * ...\n *\n * this.faio.show({\n *     clientId: 'Fingerprint-Demo',\n *     clientSecret: 'password', //Only necessary for Android\n *     disableBackup:true,  //Only for Android(optional)\n *     localizedFallbackTitle: 'Use Pin', //Only for iOS\n *     localizedReason: 'Please authenticate' //Only for iOS\n * })\n * .then((result: any) => console.log(result))\n * .catch((error: any) => console.log(error));\n *\n * ```\n * @interfaces\n * FingerprintOptions\n */\n@Plugin({\n  pluginName: 'FingerprintAIO',\n  plugin: 'cordova-plugin-fingerprint-aio',\n  pluginRef: 'Fingerprint',\n  repo: 'https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio',\n  platforms: ['Android', 'iOS']\n})\n\nexport class FingerprintAIO extends IonicNativePlugin {\n  /**\n   * Check if fingerprint authentication is available\n   * @return {Promise<any>} Returns a promise with result\n   */\n  @Cordova()\n  isAvailable(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Show authentication dialogue\n   * @param {FingerprintOptions} options Options for platform specific fingerprint API\n   * @return {Promise<any>} Returns a promise that resolves when authentication was successful\n   */\n  @Cordova()\n  show(options: FingerprintOptions): Promise<any> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}